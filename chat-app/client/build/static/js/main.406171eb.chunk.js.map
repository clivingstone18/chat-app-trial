{"version":3,"sources":["components/Chat.js","logo.svg","components/ChatMessage.js","components/Join.js","App.js","reportWebVitals.js","index.js"],"names":["socket","ChatMessage","message","sentByMe","style","display","justifyContent","user","margin","borderRadius","paddingLeft","paddingRight","background","maxWidth","alignSelf","fontStyle","text","ENDPOINT","Chat","location","useState","name","setName","setRoom","messages","setMessages","currMessage","setCurrMessage","useEffect","queryString","parse","search","room","io","emit","off","on","console","log","className","flexDirection","alignItems","height","width","marginBottom","padding","map","val","idx","value","onChange","e","target","placeholder","type","onClick","preventDefault","Join","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406171eb.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport queryString from \"query-string\";\nimport { io } from \"socket.io-client\";\nimport {ChatMessage} from \"./ChatMessage\"\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\nlet socket;\n\nexport const Chat = ({location}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currMessage, setCurrMessage] = useState('');\n\n  useEffect(() => {\n    const {name, room} = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n\n    socket.emit('join', {name, room});\n  \n  return () => {\n    socket.emit('disconnect'); \n    socket.off();\n  }\n}\n  , [ENDPOINT, location.search])\n\n  useEffect(()=> {\n    socket.on('message', text => {\n      console.log(text);\n      setMessages([text, ...messages]);\n    })\n  }, [messages])\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (currMessage) {\n      console.log(currMessage);\n      socket.emit('message', currMessage, ()=>setCurrMessage(''))\n    }\n    else {\n      /* don't do anything */\n    }\n  }\n\n  return (\n    <div className=\"App\">\n    <div style={{display: \"flex\", \n    background: \"#fadadd\", justifyContent:\"space-around\",\n    flexDirection: \"column\", alignItems: \"center\",\n    height: \"1200px\", width: \"1200px\"}}>\n      <h1>Trial Chat App</h1>\n      <div style={{height: \"1000px\", width: \"1000px\",\n    display: \"flex\",  flexDirection: \"column\", alignItems: \"center\"}}>\n        \n        <div style={{marginBottom: \"10px\", background: \"white\",height: \"800px\", width: \"800px\",\n      padding: \"20px\", display: \"flex\", flexDirection: \"column-reverse\"}}>\n          {messages.map((val, idx) => <ChatMessage key={idx} message={val} sentByMe={name === val.user}/>)}\n        </div>\n\n        <div style={{display: \"flex\"}}>          \n        <textarea value={currMessage} onChange={e=>setCurrMessage(e.target.value)} placeholder=\"Type a message!\" type=\"textarea\"></textarea>\n        <button onClick={sendMessage}>Send</button>\n\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n\n  )\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nexport const ChatMessage = ({message, sentByMe}) => {\n  return (\n<div style={{display: \"flex\", \n    justifyContent: sentByMe ? \"flex-end\" : message.user === \"admin\" ? \"center\" : \"flex-start\",\n    margin: \"2px\"}}>\n  <div style={{display: \"flex\",\n  borderRadius: \"10px\", paddingLeft: \"7px\", \n  paddingRight: \"7px\",\n  background: sentByMe ? \n    \"pink\" : message.user === \"admin\" ? \"none\" :\n    \n    \"green\",\n  maxWidth: \"300px\", alignSelf:\"left\"}}> \n  <p style={{fontStyle: message.user === \"admin\" && \"italic\"}}>{message.text}</p>\n  </div>\n  </div>\n  )\n}","import React, {useState, useEffect} from \"react\";\nimport {Link} from 'react-router-dom'\nexport const Join = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  return (\n  <div>\n    <h1>Join a chat!</h1>\n    <label>Name</label>\n    <input type=\"text\" onChange={e=>setName(e.target.value)} />\n    <label>Room</label>\n    <input type=\"text\" onChange={e=>setRoom(e.target.value)}/>\n    <Link to={ `/chat?name=${name}&room=${room}`}>\n    <button>JOIN!</button>\n    </Link>\n  </div>\n  )\n\n\n}\n\n","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from \"react\";\n// ES6 import or TypeScript\nimport { io } from \"socket.io-client\";\nimport {Chat} from \"./components/Chat\"\nimport {Join} from \"./components/Join\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// CommonJS\nconst ENDPOINT = \"http://localhost:5000\";\n\nfunction App() {\n  return(\n  <Router>\n  <Route path=\"/\" exact component={Join} />\n  <Route path=\"/chat\" component={Chat} />\n</Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}