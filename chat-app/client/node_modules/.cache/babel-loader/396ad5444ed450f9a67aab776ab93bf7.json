{"ast":null,"code":"var _jsxFileName = \"/Users/clairelivingstone/Desktop/chat-app/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { io } from \"socket.io-client\";\nimport { ChatMessage } from \"./ChatMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://127.0.0.1:5000\";\nlet socket;\nexport const Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currMessage, setCurrMessage] = useState('');\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', text => {\n      setMessages([text, ...messages]);\n    });\n  }, [messages]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (currMessage) {\n      console.log(currMessage);\n      socket.emit('send-message', currMessage, () => setCurrMessage(''));\n    } else {\n      /* don't do anything */\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        background: \"#fadadd\",\n        justifyContent: \"space-around\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height: \"1200px\",\n        width: \"1200px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trial Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"1000px\",\n          width: \"1000px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\",\n            background: \"white\",\n            height: \"800px\",\n            width: \"800px\",\n            padding: \"20px\",\n            display: \"flex\",\n            flexDirection: \"column-reverse\"\n          },\n          children: messages.map((val, idx) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: val,\n            sentByMe: name === val.user\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: currMessage,\n            onChange: e => setCurrMessage(e.target.value),\n            placeholder: \"Type a message!\",\n            type: \"textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"9FiJpOsXuLXYVXK2J8NvzrySUp4=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/chat-app/client/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","ChatMessage","ENDPOINT","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","currMessage","setCurrMessage","parse","search","emit","off","on","text","sendMessage","e","preventDefault","console","log","display","background","justifyContent","flexDirection","alignItems","height","width","marginBottom","padding","map","val","idx","user","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport queryString from \"query-string\";\nimport { io } from \"socket.io-client\";\nimport {ChatMessage} from \"./ChatMessage\"\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\nlet socket;\n\nexport const Chat = ({location}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currMessage, setCurrMessage] = useState('');\n\n  useEffect(() => {\n    const {name, room} = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n\n    socket.emit('join', {name, room});\n  \n  return () => {\n    socket.emit('disconnect'); \n    socket.off();\n  }\n}\n  , [ENDPOINT, location.search])\n\n  useEffect(()=> {\n    socket.on('message', text => {\n      setMessages([text, ...messages]);\n    })\n  }, [messages])\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (currMessage) {\n      console.log(currMessage);\n      socket.emit('send-message', currMessage, ()=>setCurrMessage(''))\n    }\n    else {\n      /* don't do anything */\n    }\n  }\n\n  return (\n    <div className=\"App\">\n    <div style={{display: \"flex\", \n    background: \"#fadadd\", justifyContent:\"space-around\",\n    flexDirection: \"column\", alignItems: \"center\",\n    height: \"1200px\", width: \"1200px\"}}>\n      <h1>Trial Chat App</h1>\n      <div style={{height: \"1000px\", width: \"1000px\",\n    display: \"flex\",  flexDirection: \"column\", alignItems: \"center\"}}>\n        \n        <div style={{marginBottom: \"10px\", background: \"white\",height: \"800px\", width: \"800px\",\n      padding: \"20px\", display: \"flex\", flexDirection: \"column-reverse\"}}>\n          {messages.map((val, idx) => <ChatMessage key={idx} message={val} sentByMe={name === val.user}/>)}\n        </div>\n\n        <div style={{display: \"flex\"}}>          \n        <textarea value={currMessage} onChange={e=>setCurrMessage(e.target.value)} placeholder=\"Type a message!\" type=\"textarea\"></textarea>\n        <button onClick={sendMessage}>Send</button>\n\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}